<?xml version="1.0" encoding="UTF-8"?>
<TestRun id="1c130bc5-7ffa-43a9-85b6-3b98637509c8" name="A647245@MC0ZD4KC 2018-08-27 13:32:48" runUser="WW930\A647245" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <TestSettings name="Local" id="3a9ae955-c07f-4ae5-b3aa-3975fcd6bce4">
    <Description>These are default test settings for a local test run.</Description>
    <Execution hostProcessPlatform="MSIL">
      <TestTypeSpecific />
      <AgentRule name="Execution Agents">
      </AgentRule>
    </Execution>
    <Deployment runDeploymentRoot="A647245_MC0ZD4KC 2018-08-27 13_32_48" />
    <Properties>
      <Property name="TestSettingsUIType" value="LoadTest" />
    </Properties>
  </TestSettings>
  <Times creation="2018-08-27T13:32:48.3148611+05:30" queuing="2018-08-27T13:32:50.5349881+05:30" start="2018-08-27T13:32:50.7990032+05:30" finish="2018-08-27T13:33:51.9345000+05:30" />
  <ResultSummary outcome="Failed">
    <Counters total="1" executed="1" error="0" failed="1" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" passed="0" completed="0" inProgress="0" pending="0" />
  </ResultSummary>
  <TestDefinitions>
    <WebTest name="WebTest1" storage="c:\users\a647245\onedrive - atos\vsprojects\citrixautomation\code\citirixautomationusingwebtest\webtest1.webtest" id="34fe655b-1a6c-4cb3-9c79-75f19359301a" persistedWebTest="">
      <Execution id="62c4a1bd-36b8-4454-9e80-7aa001d5696b" />
    </WebTest>
  </TestDefinitions>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <TestEntries>
    <TestEntry isTransparent="false" testId="34fe655b-1a6c-4cb3-9c79-75f19359301a" executionId="62c4a1bd-36b8-4454-9e80-7aa001d5696b" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <Results>
    <WebTestResult executionId="62c4a1bd-36b8-4454-9e80-7aa001d5696b" testId="34fe655b-1a6c-4cb3-9c79-75f19359301a" testName="WebTest1" computerName="MC0ZD4KC" duration="00:00:49.3094856" startTime="2018-08-27T13:32:51.4280392+05:30" endTime="2018-08-27T13:33:51.6544840+05:30" testType="4e7599fa-5ecb-43e9-a887-cd63cf72d207" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="62c4a1bd-36b8-4454-9e80-7aa001d5696b">
      <Output>
        <ErrorInfo>
          <Message>32 primary requests, 0 dependant requests and 0 conditional rules failed</Message>
        </ErrorInfo>
      </Output>
      <ResultFiles>
        <ResultFile path="WebTest1.webtestResult" />
      </ResultFiles>
      <TestSettings name="Local" id="3a9ae955-c07f-4ae5-b3aa-3975fcd6bce4">
        <Description>These are default test settings for a local test run.</Description>
        <Execution hostProcessPlatform="MSIL">
          <TestTypeSpecific>
            <WebTestRunConfiguration testTypeId="4e7599fa-5ecb-43e9-a887-cd63cf72d207">
              <Browser name="Internet Explorer 9.0" MaxConnections="6">
                <Headers>
                  <Header name="User-Agent" value="Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)" />
                  <Header name="Accept" value="*/*" />
                  <Header name="Accept-Language" value="{{$IEAcceptLanguage}}" />
                  <Header name="Accept-Encoding" value="GZIP" />
                </Headers>
              </Browser>
            </WebTestRunConfiguration>
          </TestTypeSpecific>
          <AgentRule name="Execution Agents">
          </AgentRule>
        </Execution>
        <Deployment runDeploymentRoot="A647245_MC0ZD4KC 2018-08-27 13_32_48" />
        <Properties>
          <Property name="TestSettingsUIType" value="LoadTest" />
        </Properties>
      </TestSettings>
      <WebTestResultFilePath>A647245_MC0ZD4KC 2018-08-27 13_32_48\In\62c4a1bd-36b8-4454-9e80-7aa001d5696b\WebTest1.webtestResult</WebTestResultFilePath>
    </WebTestResult>
  </Results>
</TestRun>